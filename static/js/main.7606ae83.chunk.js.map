{"version":3,"sources":["lib/utils.js","redux/actions.js","redux/reducers.js","components/Manipulator.js","components/ManipulatorHandler.js","components/AuthorItem.js","components/AuthorItemHandler.js","components/AuthorsList.js","components/AuthorsListHandler.js","App.js","serviceWorker.js","index.js"],"names":["displaceElement","array","shiftingStartIndex","indexToDisplace","resultArray","Object","toConsumableArray","displacingElements","splice","Math","min","abs","displacingElement","shift","pop","push","unshift","apply","concat","LOAD_BUTTON_CLICKED","DISPLAY_AUTHOR_ITEMS","HANDLE_AUTHOR_ITEM_HOVERING","REMOVE_AUTHOR_ITEM","PLACE_AUTHOR_ITEM","HANDLE_FOCUS_ON_AUTHOR_ITEM","UPDATE_INPUT_VALUE","HANDLE_ENTER_NEW_NAME","CANCEL_INPUTTING","AUTHOR_ITEM_STATES","RENAMING","MOVING","AUTHOR_DISPLACE_MARKERS","ABOVE","BELOW","actionHandlers","_actionHandlers","defineProperty","previousState","objectSpread","loading","_ref","loadedAuthorsList","payload","authorsRenderList","authorsById","reduce","obj","authorName","id","toString","inputValue","_ref2","authorId","hoveredAuthorId","_ref3","newValue","focusedAuthorId","_ref4","newName","focusedItemState","_ref5","placeId","indexToStartShift","indexOf","_ref6","selectedState","_ref7","authorIdToRemove","filter","initialStore","Manipulator","props","ownerId","onSelectState","onRemoveClick","react_default","a","createElement","className","type","onClick","role","aria-label","ManipulatorHandler","connect","dispatch","AuthorItem","hovered","selected","marker","onMouseEnter","onUpdateInputValue","onCancelInputting","onApplyNewName","unwrapped","displaceAuthorItem","react_addons_css_transition_group_default","transitionName","appear","appearActive","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","enter","enterActive","leave","leaveActive","transitionEnterTimeout","transitionLeaveTimeout","key","htmlFor","name","value","disabled","onKeyDown","event","target","trim","onChange","components_ManipulatorHandler","defaultProps","AuthorItemHandler","state","ownProps","_state$authorsById$id","focused","mappedProps","AuthorsList","loadingAuthorsList","focusedOccurred","list","map","components_AuthorItemHandler","AuthorsListHandler","xhr","XMLHttpRequest","open","responseType","addEventListener","readyState","response","send","store","createStore","arguments","length","undefined","action","applyMiddleware","thunk","App","es","components_AuthorsListHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7606ae83.chunk.js","sourcesContent":["function displaceElement(\n  array,\n  shiftingStartIndex,\n  indexToDisplace,\n) {\n  if (indexToDisplace === shiftingStartIndex) { return array; }\n\n  const resultArray = [...array];\n\n  const displacingElements = resultArray.splice(\n    Math.min(shiftingStartIndex, indexToDisplace),\n    Math.abs(shiftingStartIndex - indexToDisplace) + 1,\n    'marker'\n  );\n  const displacingElement = indexToDisplace > shiftingStartIndex\n    ? displacingElements.shift()\n    : displacingElements.pop();\n\n  if (indexToDisplace > shiftingStartIndex) {\n    displacingElements.push(displacingElement);\n  } else {\n    displacingElements.unshift(displacingElement);\n  }\n  resultArray.splice(\n    Math.min(shiftingStartIndex, indexToDisplace),\n    1,\n    ...displacingElements\n  );\n\n  return resultArray;\n}\n\nexport default displaceElement;\n","export const LOAD_BUTTON_CLICKED = 'load_authors_click';\nexport const DISPLAY_AUTHOR_ITEMS = 'display_author_items';\nexport const HANDLE_AUTHOR_ITEM_HOVERING = 'handle_author_item_hovering';\nexport const REMOVE_AUTHOR_ITEM = 'remove_author_item';\nexport const PLACE_AUTHOR_ITEM = 'place_author_item';\nexport const HANDLE_FOCUS_ON_AUTHOR_ITEM = 'handle_focus_on_author_item';\nexport const UPDATE_INPUT_VALUE = 'update_input_value';\nexport const HANDLE_ENTER_NEW_NAME = 'handle_input_new_name';\nexport const CANCEL_INPUTTING = 'cancel_inputting';\n\nexport const AUTHOR_ITEM_STATES = {\n  RENAMING: 'renaming',\n  MOVING: 'moving',\n};\n\nexport const AUTHOR_DISPLACE_MARKERS = {\n  ABOVE: 'above',\n  BELOW: 'below',\n};\n\nexport function loadingAuthorsList() {\n  return {\n    type: LOAD_BUTTON_CLICKED,\n  };\n}\n\nexport function displayAuthors(payload) {\n  return {\n    type: DISPLAY_AUTHOR_ITEMS,\n    payload,\n  };\n}\n\nexport function handleAuthorHovering(payload) {\n  return {\n    type: HANDLE_AUTHOR_ITEM_HOVERING,\n    payload,\n  };\n}\n\nexport function removeAuthorItem(payload) {\n  return {\n    type: REMOVE_AUTHOR_ITEM,\n    payload,\n  };\n}\n\nexport function displaceAuthorItem(payload) {\n  return {\n    type: PLACE_AUTHOR_ITEM,\n    payload,\n  };\n}\n\nexport function handleRenaming(payload) {\n  return {\n    type: HANDLE_ENTER_NEW_NAME,\n    payload,\n  };\n}\n\nexport function cancelRenaming() {\n  return {\n    type: CANCEL_INPUTTING,\n  };\n}\n\nexport function handleFocus(payload) {\n  return {\n    type: HANDLE_FOCUS_ON_AUTHOR_ITEM,\n    payload,\n  };\n}\n\nexport function updateInputValue(payload) {\n  return {\n    type: UPDATE_INPUT_VALUE,\n    payload,\n  };\n}\n","import displaceElement from '../lib/utils';\nimport {\n  DISPLAY_AUTHOR_ITEMS,\n  HANDLE_AUTHOR_ITEM_HOVERING,\n  HANDLE_FOCUS_ON_AUTHOR_ITEM,\n  LOAD_BUTTON_CLICKED,\n  PLACE_AUTHOR_ITEM,\n  REMOVE_AUTHOR_ITEM,\n  HANDLE_ENTER_NEW_NAME,\n  UPDATE_INPUT_VALUE,\n  CANCEL_INPUTTING,\n} from './actions';\n\nconst actionHandlers = {\n  [LOAD_BUTTON_CLICKED]: previousState => ({\n    ...previousState,\n    loading: true,\n  }),\n  [DISPLAY_AUTHOR_ITEMS]: (previousState, { payload: loadedAuthorsList }) => {\n    const authorsRenderList = [];\n    const authorsById = loadedAuthorsList.reduce((obj, authorName, id) => {\n      authorsRenderList.push(id.toString());\n      return { ...obj, [id]: { authorName, inputValue: authorName } };\n    }, {});\n\n    return {\n      ...previousState,\n      authorsById,\n      authorsRenderList,\n    };\n  },\n  [HANDLE_AUTHOR_ITEM_HOVERING]: (previousState, { payload: authorId }) => ({\n    ...previousState,\n    hoveredAuthorId: authorId,\n  }),\n  [UPDATE_INPUT_VALUE]: (previousState, { payload: newValue }) => {\n    const { authorsById, focusedAuthorId } = previousState;\n    const { authorName } = authorsById[focusedAuthorId];\n\n    return {\n      ...previousState,\n      authorsById: {\n        ...authorsById,\n        [previousState.focusedAuthorId]: {\n          authorName,\n          inputValue: newValue,\n        },\n      },\n    };\n  },\n  [HANDLE_ENTER_NEW_NAME]: (previousState, { payload: newName }) => {\n    if (newName === '') {\n      return previousState;\n    }\n\n    return {\n      ...previousState,\n      authorsById: {\n        ...previousState.authorsById,\n        [previousState.focusedAuthorId]: {\n          authorName: newName,\n          inputValue: newName,\n        },\n      },\n      focusedAuthorId: null,\n    };\n  },\n  [CANCEL_INPUTTING]: (previousState) => {\n    const { authorsById, focusedAuthorId } = previousState;\n    const { authorName } = authorsById[focusedAuthorId];\n\n    return {\n      ...previousState,\n      authorsById: {\n        ...authorsById,\n        [previousState.focusedAuthorId]: {\n          authorName,\n          inputValue: authorName,\n        },\n      },\n      focusedAuthorId: null,\n      focusedItemState: null,\n    };\n  },\n  [PLACE_AUTHOR_ITEM]: (previousState, { payload: placeId }) => {\n    const {\n      authorsRenderList,\n      focusedAuthorId,\n    } = previousState;\n    const indexToStartShift = authorsRenderList.indexOf(focusedAuthorId);\n    const indexToDisplace = authorsRenderList.indexOf(placeId);\n\n    return {\n      ...previousState,\n      authorsRenderList: displaceElement(\n        authorsRenderList,\n        indexToStartShift,\n        indexToDisplace,\n      ),\n      focusedAuthorId: null,\n      focusedItemState: null,\n      hoveredAuthorId: previousState.hoveredAuthorId,\n    };\n  },\n  [HANDLE_FOCUS_ON_AUTHOR_ITEM]: (previousState, { payload }) => ({\n    ...previousState,\n    focusedAuthorId: payload.authorId,\n    focusedItemState: payload.selectedState,\n  }),\n  [REMOVE_AUTHOR_ITEM]: (previousState, { payload: authorIdToRemove }) => ({\n    ...previousState,\n    authorsById: { ...previousState.authorsById },\n    authorsRenderList: previousState.authorsRenderList.filter(\n      authorId => authorId !== authorIdToRemove\n    ),\n  }),\n};\n\nconst initialStore = {\n  loading: false,\n  authorsRenderList: null,\n  authorsById: null,\n  focusedAuthorId: null,\n  focusedItemState: null,\n  hoveredAuthorId: null,\n};\n\nexport default function reducer(previousState = initialStore, action) {\n  return actionHandlers[action.type]\n    ? actionHandlers[action.type](previousState, action)\n    : previousState;\n}\n","import React from 'react';\nimport { string, func } from 'prop-types';\nimport { AUTHOR_ITEM_STATES } from '../redux/actions';\nimport './Manipulator.css';\n\nfunction Manipulator(props) {\n  const { ownerId, onSelectState, onRemoveClick } = props;\n\n  return (\n    <div className=\"manipulator\">\n      <button\n        type=\"button\"\n        className=\"manipulator-button rename\"\n        onClick={() => onSelectState(ownerId, AUTHOR_ITEM_STATES.RENAMING)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Rename\">\n          &#9997;\n        </span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"manipulator-button move\"\n        onClick={() => onSelectState(ownerId, AUTHOR_ITEM_STATES.MOVING)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Move\">\n          &#10037;\n        </span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"manipulator-button remove\"\n        onClick={() => onRemoveClick(ownerId)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Remove\">\n          &#128465;\n        </span>\n      </button>\n    </div>\n  );\n}\n\nManipulator.propTypes = {\n  ownerId: string.isRequired,\n  onRemoveClick: func.isRequired,\n  onSelectState: func.isRequired,\n};\n\nexport default Manipulator;\n","import { connect } from 'react-redux';\nimport Manipulator from './Manipulator';\nimport { removeAuthorItem, handleFocus } from '../redux/actions';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onRemoveClick: authorId => dispatch(removeAuthorItem(authorId)),\n    onSelectState: (authorId, selectedState) => dispatch(\n      handleFocus({ authorId, selectedState })\n    ),\n  };\n}\n\nconst ManipulatorHandler = connect(\n  null,\n  mapDispatchToProps\n)(Manipulator);\n\nexport default ManipulatorHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport ManipulatorHandler from './ManipulatorHandler';\nimport { AUTHOR_DISPLACE_MARKERS, AUTHOR_ITEM_STATES } from '../redux/actions';\nimport './AuthorItem.css';\n\nconst AuthorItem = (props) => {\n  const {\n    id,\n    authorName,\n    inputValue,\n    hovered,\n    selected,\n    focusedItemState,\n    marker,\n    onMouseEnter,\n    onUpdateInputValue,\n    onCancelInputting,\n    onApplyNewName,\n    unwrapped,\n    displaceAuthorItem,\n  } = props;\n\n  return (\n    <ReactCSSTransitionGroup\n      transitionName={{\n        appear: 'item-appear',\n        appearActive: 'item-appearActive',\n      }}\n      transitionAppear\n      transitionEnter={false}\n      transitionLeave={false}\n      transitionAppearTimeout={700}\n    >\n      <ReactCSSTransitionGroup\n        transitionName={{\n          enter: 'enter',\n          enterActive: 'enterActive',\n          leave: 'leave',\n          leaveActive: 'leaveActive',\n        }}\n        transitionEnterTimeout={300}\n        transitionLeaveTimeout={300}\n      >\n        {(marker === AUTHOR_DISPLACE_MARKERS.ABOVE || selected)\n        && focusedItemState === AUTHOR_ITEM_STATES.MOVING\n        && (\n          <button\n            key={`${id}_upper-marker`}\n            type=\"button\"\n            className={`marker${hovered ? ' marker-hover' : ''}`}\n            onClick={displaceAuthorItem}\n          >\n            {selected ? '▼' : '▲'}\n          </button>\n        )}\n      </ReactCSSTransitionGroup>\n      <section\n        className={`item-wrapper${hovered ? ' hovered' : ''}`}\n        onMouseEnter={onMouseEnter}\n      >\n        <label\n          htmlFor={`author_${id}`}\n          className=\"author-name\"\n        >\n          {authorName}\n          <input\n            name={`author_${id}`}\n            className={unwrapped ? 'unwrapped' : 'wrapped'}\n            type=\"text\"\n            value={inputValue}\n            disabled={!unwrapped}\n            onKeyDown={(event) => {\n              switch (event.key) {\n                case 'Enter':\n                  onApplyNewName(event.target.value.trim());\n                  break;\n                case 'Escape':\n                  onCancelInputting();\n                  break;\n                default:\n              }\n            }}\n            onChange={event => onUpdateInputValue(event.target.value)}\n          />\n        </label>\n        <ReactCSSTransitionGroup\n          transitionName={{\n            enter: 'manipulator-enter',\n            enterActive: 'manipulator-enter-active',\n            leave: 'manipulator-leave',\n            leaveActive: 'manipulator-leave-active',\n          }}\n          transitionEnterTimeout={150}\n          transitionLeaveTimeout={200}\n        >\n          {\n            hovered\n            && !selected\n            && <ManipulatorHandler key={`manipulator_${id}`} ownerId={id} />\n          }\n        </ReactCSSTransitionGroup>\n      </section>\n      <ReactCSSTransitionGroup\n        transitionName={{\n          enter: 'enter',\n          enterActive: 'enterActive',\n          leave: 'leave',\n          leaveActive: 'leaveActive',\n        }}\n        transitionEnterTimeout={300}\n        transitionLeaveTimeout={300}\n      >\n        {(marker === AUTHOR_DISPLACE_MARKERS.BELOW || selected)\n        && focusedItemState === AUTHOR_ITEM_STATES.MOVING\n        && (\n          <button\n            key={`${id}_lower-marker`}\n            type=\"button\"\n            className={`marker${hovered ? ' marker-hover' : ''}`}\n            onClick={displaceAuthorItem}\n          >\n            {selected ? '▲' : '▼'}\n          </button>\n        )}\n      </ReactCSSTransitionGroup>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nAuthorItem.defaultProps = {\n  unwrapped: false,\n  inputValue: '',\n  focusedItemState: null,\n};\n\nAuthorItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  hovered: PropTypes.bool.isRequired,\n  selected: PropTypes.bool.isRequired,\n  marker: PropTypes.string.isRequired,\n  displaceAuthorItem: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  unwrapped: PropTypes.bool,\n  focusedItemState: PropTypes.string,\n  onMouseEnter: PropTypes.func.isRequired,\n  onApplyNewName: PropTypes.func.isRequired,\n  onUpdateInputValue: PropTypes.func.isRequired,\n  onCancelInputting: PropTypes.func.isRequired,\n};\n\nexport default AuthorItem;\n","import { connect } from 'react-redux';\nimport AuthorItem from './AuthorItem';\nimport {\n  displaceAuthorItem,\n  handleAuthorHovering,\n  handleRenaming,\n  updateInputValue,\n  cancelRenaming,\n  AUTHOR_ITEM_STATES,\n} from '../redux/actions';\n\nfunction mapStateToProps(state, ownProps) {\n  const { id } = ownProps;\n  const {\n    hoveredAuthorId,\n    focusedAuthorId,\n    focusedItemState,\n  } = state;\n  const { authorName, inputValue } = state.authorsById[id];\n\n  const focused = id === focusedAuthorId;\n\n  const mappedProps = {\n    authorName,\n    inputValue,\n    focusedItemState,\n    selected: focused,\n    hovered: id === hoveredAuthorId,\n  };\n\n  if (focused) {\n    mappedProps.unwrapped = focusedItemState === AUTHOR_ITEM_STATES.RENAMING;\n  }\n\n  return mappedProps;\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onUpdateInputValue: newValue => dispatch(updateInputValue(newValue)),\n    onApplyNewName: newName => dispatch(handleRenaming(newName)),\n    onMouseEnter: () => dispatch(handleAuthorHovering(ownProps.id)),\n    displaceAuthorItem: () => dispatch(displaceAuthorItem(ownProps.id)),\n    onCancelInputting: () => dispatch(cancelRenaming()),\n  };\n}\n\nconst AuthorItemHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthorItem);\n\nexport default AuthorItemHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AuthorsList.css';\nimport { AUTHOR_DISPLACE_MARKERS, AUTHOR_ITEM_STATES } from '../redux/actions';\nimport AuthorItemHandler from './AuthorItemHandler';\n\nfunction AuthorsList(props) {\n  const {\n    loading,\n    loadingAuthorsList,\n    authorsRenderList,\n    focusedAuthorId,\n    focusedItemState,\n  } = props;\n  let focusedOccurred = false;\n  let marker;\n\n  const list = authorsRenderList\n    ? authorsRenderList.map(\n      (authorId) => {\n        if (authorId === focusedAuthorId) { focusedOccurred = true; }\n        marker = '';\n        if (\n          focusedItemState === AUTHOR_ITEM_STATES.MOVING\n          && focusedAuthorId !== authorId\n        ) {\n          if (focusedOccurred === true) {\n            marker = AUTHOR_DISPLACE_MARKERS.BELOW;\n          } else {\n            marker = AUTHOR_DISPLACE_MARKERS.ABOVE;\n          }\n        }\n\n        return (\n          <AuthorItemHandler\n            key={authorId}\n            id={authorId}\n            marker={marker}\n          />\n        );\n      }\n    ) : null;\n\n  return (\n    <div className=\"list-wrapper\">\n      {list}\n      {!loading && (\n        <button\n          type=\"button\"\n          disabled={loading}\n          className=\"load-button\"\n          onClick={loadingAuthorsList}\n        >\n          {loading ? 'Loading data...' : 'Load authors data'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nAuthorsList.defaultProps = {\n  loading: null,\n  authorsRenderList: null,\n  focusedAuthorId: null,\n  focusedItemState: null,\n};\n\nAuthorsList.propTypes = {\n  authorsRenderList: PropTypes.arrayOf(PropTypes.string),\n  focusedAuthorId: PropTypes.string,\n  focusedItemState: PropTypes.string,\n  loading: PropTypes.bool,\n  loadingAuthorsList: PropTypes.func.isRequired,\n};\n\nexport default AuthorsList;\n","import { connect } from 'react-redux';\nimport AuthorsList from './AuthorsList';\nimport {\n  displayAuthors,\n  loadingAuthorsList,\n} from '../redux/actions';\n\nfunction mapStateToProps(state) {\n  const {\n    authorsRenderList,\n    loading,\n    focusedItemState,\n    focusedAuthorId,\n  } = state;\n\n  return {\n    authorsRenderList,\n    loading,\n    focusedItemState,\n    focusedAuthorId,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadingAuthorsList: () => {\n      dispatch(loadingAuthorsList());\n\n      const xhr = new XMLHttpRequest();\n\n      xhr.open(\n        'GET',\n        'https://my-json-server.typicode.com/mate-academy/'\n          + 'literary-blog/authors',\n      );\n      xhr.responseType = 'json';\n      xhr.addEventListener('load', () => {\n        if (xhr.readyState === 4) {\n          dispatch(displayAuthors(xhr.response));\n        }\n      });\n      xhr.send();\n    },\n  };\n}\n\nconst AuthorsListHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthorsList);\n\nexport default AuthorsListHandler;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducer from './redux/reducers';\nimport AuthorsListHandler from './components/AuthorsListHandler';\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AuthorsListHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}