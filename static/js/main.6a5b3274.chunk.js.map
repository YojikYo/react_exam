{"version":3,"sources":["lib/utils.js","redux/actions.js","redux/reducers.js","components/AuthorsList.js","components/Manipulator.js","components/ManipulatorHandler.js","components/AuthorItem.js","components/AuthorItemHandler.js","components/AuthorsListHandler.js","App.js","serviceWorker.js","index.js"],"names":["displaceElement","array","shiftingIndex","shiftToIndex","Object","toConsumableArray","resultArray","shiftingSign","hasShifting","index","length","push","LOAD_BUTTON_CLICKED","DISPLAY_AUTHOR_ITEMS","HANDLE_AUTHOR_ITEM_HOVERING","REMOVE_AUTHOR_ITEM","PLACE_AUTHOR_ITEM","HANDLE_FOCUS_ON_AUTHOR_ITEM","HANDLE_INPUT_NEW_NAME","AUTHOR_ITEM_STATES","RENAMING","MOVING","AUTHOR_DISPLACE_MARKERS","ABOVE","BELOW","actionHandlers","_actionHandlers","defineProperty","previousState","objectSpread","loading","_ref","loadedAuthorsList","payload","authorsRenderList","authorsById","reduce","obj","authorsName","id","toString","_ref2","authorId","hoveredAuthorId","_ref3","newName","focusedAuthorId","indexOf","_ref4","focusedItemState","selectedState","_ref5","authorIdToRemove","newList","currItemId","concat","initialStore","AuthorsList","props","children","loadingAuthorsList","react_default","a","createElement","className","type","disabled","onClick","defaultProps","Manipulator","ownerId","onSelectState","onRemoveClick","role","aria-label","ManipulatorHandler","connect","dispatch","ownProps","AuthorItem","authorName","hovered","focused","marker","onMouseEnter","onApplyNewName","unwrapped","displaceAuthorItem","htmlFor","name","defaultValue","onKeyPress","keyPressEvent","code","target","value","trim","components_ManipulatorHandler","AuthorItemHandler","state","mappedProps","selected","AuthorsListHandler","focusedOccurred","map","components_AuthorItemHandler","key","xhr","XMLHttpRequest","open","responseType","addEventListener","readyState","response","send","store","createStore","arguments","undefined","action","applyMiddleware","thunk","App","es","components_AuthorsListHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a5b3274.chunk.js","sourcesContent":["function displaceElement(\n  array,\n  shiftingIndex,\n  shiftToIndex,\n) {\n  if (shiftToIndex === shiftingIndex) { return [...array]; }\n\n  const resultArray = [];\n  const shiftingSign = shiftToIndex > shiftingIndex ? 1 : -1;\n  let hasShifting = false;\n\n  for (let index = 0; index < array.length; index += 1) {\n    if (index === shiftToIndex) {\n      hasShifting = !hasShifting;\n      resultArray.push(array[shiftingIndex]);\n    } else if (index === shiftingIndex) {\n      hasShifting = !hasShifting;\n      resultArray.push(array[shiftToIndex]);\n    } else if (hasShifting) {\n      resultArray.push(array[index + shiftingSign]);\n    } else {\n      resultArray.push(array[index]);\n    }\n  }\n\n  return resultArray;\n}\n\nexport default displaceElement;\n","export const LOAD_BUTTON_CLICKED = 'load_authors_click';\nexport const DISPLAY_AUTHOR_ITEMS = 'display_author_items';\nexport const HANDLE_AUTHOR_ITEM_HOVERING = 'handle_author_item_hovering';\nexport const REMOVE_AUTHOR_ITEM = 'remove_author_item';\nexport const PLACE_AUTHOR_ITEM = 'place_author_item';\nexport const HANDLE_FOCUS_ON_AUTHOR_ITEM = 'handle_focus_on_author_item';\nexport const HANDLE_INPUT_NEW_NAME = 'handle_input_new_name';\n\nexport const AUTHOR_ITEM_STATES = {\n  RENAMING: 'renaming',\n  MOVING: 'moving',\n};\n\nexport const AUTHOR_DISPLACE_MARKERS = {\n  ABOVE: 'above',\n  BELOW: 'below',\n};\n\nexport function loadingAuthorsList() {\n  return {\n    type: LOAD_BUTTON_CLICKED,\n  };\n}\n\nexport function displayAuthors(payload) {\n  return {\n    type: DISPLAY_AUTHOR_ITEMS,\n    payload,\n  };\n}\n\nexport function handleAuthorHovering(payload) {\n  return {\n    type: HANDLE_AUTHOR_ITEM_HOVERING,\n    payload,\n  };\n}\n\nexport function removeAuthorItem(payload) {\n  return {\n    type: REMOVE_AUTHOR_ITEM,\n    payload,\n  };\n}\n\nexport function displaceAuthorItem() {\n  return {\n    type: PLACE_AUTHOR_ITEM,\n  };\n}\n\nexport function handleRenaming(payload) {\n  return {\n    type: HANDLE_INPUT_NEW_NAME,\n    payload,\n  };\n}\n\nexport function handleFocus(payload) {\n  return {\n    type: HANDLE_FOCUS_ON_AUTHOR_ITEM,\n    payload,\n  };\n}\n","import displaceElement from '../lib/utils';\nimport {\n  DISPLAY_AUTHOR_ITEMS,\n  HANDLE_AUTHOR_ITEM_HOVERING,\n  HANDLE_FOCUS_ON_AUTHOR_ITEM,\n  LOAD_BUTTON_CLICKED,\n  PLACE_AUTHOR_ITEM,\n  REMOVE_AUTHOR_ITEM,\n  HANDLE_INPUT_NEW_NAME,\n} from './actions';\n\nconst actionHandlers = {\n  [LOAD_BUTTON_CLICKED]: previousState => ({\n    ...previousState,\n    loading: true,\n  }),\n  [DISPLAY_AUTHOR_ITEMS]: (previousState, { payload: loadedAuthorsList }) => {\n    const authorsRenderList = [];\n    const authorsById = loadedAuthorsList.reduce((obj, authorsName, id) => {\n      authorsRenderList.push(id.toString());\n      return { ...obj, [id]: authorsName };\n    }, {});\n\n    return {\n      ...previousState,\n      authorsById,\n      authorsRenderList,\n    };\n  },\n  [HANDLE_AUTHOR_ITEM_HOVERING]: (previousState, { payload: authorId }) => ({\n    ...previousState,\n    hoveredAuthorId: authorId,\n  }),\n  [HANDLE_INPUT_NEW_NAME]: (previousState, { payload: newName }) => {\n    if (newName === '') {\n      return previousState;\n    }\n    return {\n      ...previousState,\n      authorsById: {\n        ...previousState.authorsById,\n        [previousState.focusedAuthorId]: newName,\n      },\n    };\n  },\n  [PLACE_AUTHOR_ITEM]: (previousState) => {\n    const {\n      authorsRenderList,\n      hoveredAuthorId,\n      focusedAuthorId,\n    } = previousState;\n    const shiftingIndex = authorsRenderList.indexOf(focusedAuthorId);\n    const shiftToIndex = authorsRenderList.indexOf(hoveredAuthorId);\n\n    return {\n      ...previousState,\n      authorsRenderList: displaceElement(\n        authorsRenderList,\n        shiftingIndex,\n        shiftToIndex,\n      ),\n      focusedAuthorId: null,\n      hoveredAuthorId: previousState.hoveredAuthorId,\n    };\n  },\n  [HANDLE_FOCUS_ON_AUTHOR_ITEM]: (previousState, { payload }) => ({\n    ...previousState,\n    focusedAuthorId: payload.authorId,\n    focusedItemState: payload.selectedState,\n  }),\n  [REMOVE_AUTHOR_ITEM]: (previousState, { payload: authorIdToRemove }) => {\n    delete previousState.authorsById[authorIdToRemove];\n\n    return {\n      ...previousState,\n      authorsById: { ...previousState.authorsById },\n      authorsRenderList: previousState.authorsRenderList.reduce(\n        (newList, currItemId) => {\n          if (currItemId !== authorIdToRemove) {\n            return [...newList, currItemId];\n          }\n          return newList;\n        },\n        [],\n      ),\n    };\n  },\n};\n\nconst initialStore = {\n  loading: false,\n  authorsRenderList: null,\n  authorsById: null,\n  focusedAuthorId: null,\n  focusedItemState: null,\n  hoveredAuthorId: null,\n};\n\nexport default function reducer(previousState = initialStore, action) {\n  return actionHandlers[action.type]\n    ? actionHandlers[action.type](previousState, action)\n    : previousState;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AuthorsList(props) {\n  const { children, loading, loadingAuthorsList } = props;\n\n  return (\n    <div className=\"list-wrapper\">\n      {children}\n      {!loading && (\n        <button\n          type=\"button\"\n          disabled={loading}\n          className=\"load-button\"\n          onClick={loadingAuthorsList}\n        >\n          {loading ? 'Loading data...' : 'Load authors data'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nAuthorsList.defaultProps = {\n  children: null,\n  loading: null,\n};\n\nAuthorsList.propTypes = {\n  children: PropTypes.oneOf([\n    null,\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  loading: PropTypes.bool,\n  loadingAuthorsList: PropTypes.func.isRequired,\n};\n\nexport default AuthorsList;\n","import React from 'react';\nimport { string, func } from 'prop-types';\nimport { AUTHOR_ITEM_STATES } from '../redux/actions';\n\nfunction Manipulator(props) {\n  const { ownerId, onSelectState, onRemoveClick } = props;\n\n  return (\n    <div className=\"manipulator\">\n      <button\n        type=\"button\"\n        className=\"manipulator-button rename\"\n        onClick={() => onSelectState(ownerId, AUTHOR_ITEM_STATES.RENAMING)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Rename\">\n          &#9997;\n        </span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"manipulator-button move\"\n        onClick={() => onSelectState(ownerId, AUTHOR_ITEM_STATES.MOVING)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Move\">\n          &#10037;\n        </span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"manipulator-button remove\"\n        onClick={\n          () => onRemoveClick(ownerId)\n        }\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Remove\">\n          &#128465;\n        </span>\n      </button>\n    </div>\n  );\n}\n\nManipulator.propTypes = {\n  ownerId: string.isRequired,\n  onRemoveClick: func.isRequired,\n  onSelectState: func.isRequired,\n};\n\nexport default Manipulator;\n","import { connect } from 'react-redux';\nimport Manipulator from './Manipulator';\nimport { removeAuthorItem, handleFocus } from '../redux/actions';\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onRemoveClick: () => dispatch(removeAuthorItem(ownProps.ownerId)),\n    onSelectState: (authorId, selectedState) => dispatch(\n      handleFocus({ authorId, selectedState })\n    ),\n  };\n}\n\nconst ManipulatorHandler = connect(\n  null,\n  mapDispatchToProps\n)(Manipulator);\n\nexport default ManipulatorHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ManipulatorHandler from './ManipulatorHandler';\nimport { AUTHOR_DISPLACE_MARKERS } from '../redux/actions';\n\nconst AuthorItem = (props) => {\n  const {\n    id,\n    authorName,\n    hovered,\n    focused,\n    marker,\n    onMouseEnter,\n    onApplyNewName,\n    unwrapped,\n    displaceAuthorItem,\n  } = props;\n\n  return (\n    <section\n      className=\"item-wrapper\"\n      onMouseEnter={hovered ? null : onMouseEnter}\n    >\n      {(marker === AUTHOR_DISPLACE_MARKERS.ABOVE || focused) && (\n        <button\n          type=\"button\"\n          className={`marker${hovered ? ' hovered' : ''}`}\n          onClick={() => displaceAuthorItem(id)}\n        >\n          {focused ? '▼' : '▲'}\n        </button>\n      )}\n      <label\n        htmlFor={`author_${id}`}\n        className=\"author-name\"\n      >\n        {authorName}\n        <input\n          name={`author_${id}`}\n          className={unwrapped ? 'unwrapped' : 'wrapped'}\n          type=\"text\"\n          defaultValue={authorName}\n          onKeyPress={(keyPressEvent) => {\n            if (keyPressEvent.code === 'Enter') {\n              onApplyNewName(keyPressEvent.target.value.trim());\n            }\n          }}\n        />\n      </label>\n      {(marker === AUTHOR_DISPLACE_MARKERS.BELOW || focused) && (\n        <button\n          type=\"button\"\n          className={`marker${hovered ? ' hovered' : ''}`}\n          onClick={() => displaceAuthorItem(id)}\n        >\n          {focused ? '▲' : '▼'}\n        </button>\n      )}\n      {\n        hovered && !focused && <ManipulatorHandler ownerId={id} />\n      }\n    </section>\n  );\n};\n\nAuthorItem.defaultProps = {\n  unwrapped: false,\n};\n\nAuthorItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  hovered: PropTypes.bool.isRequired,\n  focused: PropTypes.bool.isRequired,\n  marker: PropTypes.string.isRequired,\n  displaceAuthorItem: PropTypes.func.isRequired,\n  unwrapped: PropTypes.bool,\n  onMouseEnter: PropTypes.func.isRequired,\n  onApplyNewName: PropTypes.func.isRequired,\n};\n\nexport default AuthorItem;\n","import { connect } from 'react-redux';\nimport AuthorItem from './AuthorItem';\nimport {\n  displaceAuthorItem,\n  handleAuthorHovering,\n  handleRenaming,\n  AUTHOR_ITEM_STATES,\n} from '../redux/actions';\n\nfunction mapStateToProps(state, ownProps) {\n  const { id } = ownProps;\n  const {\n    hoveredAuthorId,\n    focusedAuthorId,\n    focusedItemState,\n    authorsById: {\n      [id]: authorName,\n    },\n  } = state;\n\n  const focused = id === focusedAuthorId;\n\n  const mappedProps = {\n    authorName,\n    selected: focused,\n    hovered: focusedAuthorId ? false : id === hoveredAuthorId,\n  };\n\n  if (focused) {\n    mappedProps.unwrapped = focusedItemState === AUTHOR_ITEM_STATES.RENAMING;\n  }\n\n  return mappedProps;\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onApplyNewName: newName => dispatch(handleRenaming(newName)),\n    onMouseEnter: () => dispatch(handleAuthorHovering(ownProps.id)),\n    displaceAuthorItem: () => dispatch(displaceAuthorItem(ownProps.id)),\n  };\n}\n\nconst AuthorItemHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthorItem);\n\nexport default AuthorItemHandler;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport AuthorsList from './AuthorsList';\nimport {\n  AUTHOR_ITEM_STATES,\n  AUTHOR_DISPLACE_MARKERS,\n  displayAuthors,\n  loadingAuthorsList,\n} from '../redux/actions';\nimport AuthorItemHandler from './AuthorItemHandler';\n\nfunction mapStateToProps(state) {\n  const {\n    authorsRenderList,\n    loading,\n    focusedItemState,\n    focusedAuthorId,\n  } = state;\n  let focusedOccurred = false;\n  let marker;\n  const children = authorsRenderList\n    ? authorsRenderList.map(\n      (authorId) => {\n        if (authorId === focusedAuthorId) { focusedOccurred = true; }\n        marker = '';\n        if (\n          focusedItemState === AUTHOR_ITEM_STATES.MOVING\n          && focusedAuthorId !== authorId\n        ) {\n          if (focusedOccurred === true) {\n            marker = AUTHOR_DISPLACE_MARKERS.BELOW;\n          } else {\n            marker = AUTHOR_DISPLACE_MARKERS.ABOVE;\n          }\n        }\n\n        return (\n          <AuthorItemHandler\n            key={authorId}\n            id={authorId}\n            marker={marker}\n          />\n        );\n      }\n    ) : null;\n\n  return {\n    children,\n    loading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadingAuthorsList: () => {\n      dispatch(loadingAuthorsList());\n\n      const xhr = new XMLHttpRequest();\n\n      xhr.open(\n        'GET',\n        'http://my-json-server.typicode.com/mate-academy/literary-blog/authors',\n      );\n      xhr.responseType = 'json';\n      xhr.addEventListener('load', () => {\n        if (xhr.readyState === 4) {\n          dispatch(displayAuthors(xhr.response));\n        }\n      });\n      xhr.send();\n    },\n  };\n}\n\nconst AuthorsListHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthorsList);\n\nexport default AuthorsListHandler;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducer from './redux/reducers';\nimport AuthorsListHandler from './components/AuthorsListHandler';\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AuthorsListHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}