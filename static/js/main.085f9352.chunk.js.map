{"version":3,"sources":["lib/utils.js","redux/actions.js","redux/reducers.js","components/Manipulator.js","components/ManipulatorHandler.js","components/AuthorItem.js","components/AuthorItemHandler.js","components/AuthorsList.js","components/AuthorsListHandler.js","App.js","serviceWorker.js","index.js"],"names":["displaceElement","array","shiftingIndex","shiftToIndex","Object","toConsumableArray","shiftingSign","resultArray","hasShifting","index","length","push","LOAD_BUTTON_CLICKED","DISPLAY_AUTHOR_ITEMS","HANDLE_AUTHOR_ITEM_HOVERING","REMOVE_AUTHOR_ITEM","PLACE_AUTHOR_ITEM","HANDLE_FOCUS_ON_AUTHOR_ITEM","UPDATE_INPUT_VALUE","HANDLE_ENTER_NEW_NAME","CANCEL_INPUTTING","AUTHOR_ITEM_STATES","RENAMING","MOVING","AUTHOR_DISPLACE_MARKERS","ABOVE","BELOW","actionHandlers","_actionHandlers","defineProperty","previousState","objectSpread","loading","_ref","loadedAuthorsList","payload","authorsRenderList","authorsById","reduce","obj","authorName","id","toString","inputValue","_ref2","authorId","hoveredAuthorId","_ref3","newValue","focusedAuthorId","_ref4","newName","focusedItemState","indexOf","_ref5","selectedState","_ref6","authorIdToRemove","newList","currItemId","concat","initialStore","Manipulator","props","ownerId","onSelectState","onRemoveClick","react_default","a","createElement","className","type","onClick","role","aria-label","ManipulatorHandler","connect","dispatch","ownProps","AuthorItem","hovered","selected","marker","onMouseEnter","onUpdateInputValue","onCancelInputting","onApplyNewName","unwrapped","displaceAuthorItem","react","htmlFor","name","value","disabled","onKeyDown","event","key","target","trim","onChange","components_ManipulatorHandler","defaultProps","AuthorItemHandler","state","_state$authorsById$id","focused","mappedProps","AuthorsList","loadingAuthorsList","focusedOccurred","map","components_AuthorItemHandler","AuthorsListHandler","xhr","XMLHttpRequest","open","responseType","addEventListener","readyState","response","send","store","createStore","arguments","undefined","action","applyMiddleware","thunk","App","es","components_AuthorsListHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.085f9352.chunk.js","sourcesContent":["function displaceElement(\n  array,\n  shiftingIndex,\n  shiftToIndex,\n) {\n  if (shiftToIndex === shiftingIndex) { return [...array]; }\n\n  const resultArray = [];\n  let shiftingSign;\n  if (shiftToIndex === shiftingIndex) {\n    shiftingSign = 0;\n  } else if (shiftToIndex > shiftingIndex) {\n    shiftingSign = 1;\n  } else {\n    shiftingSign = -1;\n  }\n  let hasShifting = false;\n\n  for (let index = 0; index < array.length; index += 1) {\n    if (index === shiftToIndex) {\n      hasShifting = !hasShifting;\n      resultArray.push(array[shiftingIndex]);\n    } else if (index === shiftingIndex) {\n      hasShifting = !hasShifting;\n      resultArray.push(array[shiftToIndex]);\n    } else if (hasShifting) {\n      resultArray.push(array[index + shiftingSign]);\n    } else {\n      resultArray.push(array[index]);\n    }\n  }\n\n  return resultArray;\n}\n\nexport default displaceElement;\n","export const LOAD_BUTTON_CLICKED = 'load_authors_click';\nexport const DISPLAY_AUTHOR_ITEMS = 'display_author_items';\nexport const HANDLE_AUTHOR_ITEM_HOVERING = 'handle_author_item_hovering';\nexport const REMOVE_AUTHOR_ITEM = 'remove_author_item';\nexport const PLACE_AUTHOR_ITEM = 'place_author_item';\nexport const HANDLE_FOCUS_ON_AUTHOR_ITEM = 'handle_focus_on_author_item';\nexport const UPDATE_INPUT_VALUE = 'update_input_value';\nexport const HANDLE_ENTER_NEW_NAME = 'handle_input_new_name';\nexport const CANCEL_INPUTTING = 'cancel_inputting';\n\nexport const AUTHOR_ITEM_STATES = {\n  RENAMING: 'renaming',\n  MOVING: 'moving',\n};\n\nexport const AUTHOR_DISPLACE_MARKERS = {\n  ABOVE: 'above',\n  BELOW: 'below',\n};\n\nexport function loadingAuthorsList() {\n  return {\n    type: LOAD_BUTTON_CLICKED,\n  };\n}\n\nexport function displayAuthors(payload) {\n  return {\n    type: DISPLAY_AUTHOR_ITEMS,\n    payload,\n  };\n}\n\nexport function handleAuthorHovering(payload) {\n  return {\n    type: HANDLE_AUTHOR_ITEM_HOVERING,\n    payload,\n  };\n}\n\nexport function removeAuthorItem(payload) {\n  return {\n    type: REMOVE_AUTHOR_ITEM,\n    payload,\n  };\n}\n\nexport function displaceAuthorItem() {\n  return {\n    type: PLACE_AUTHOR_ITEM,\n  };\n}\n\nexport function handleRenaming(payload) {\n  return {\n    type: HANDLE_ENTER_NEW_NAME,\n    payload,\n  };\n}\n\nexport function cancelRenaming() {\n  return {\n    type: CANCEL_INPUTTING,\n  };\n}\n\nexport function handleFocus(payload) {\n  return {\n    type: HANDLE_FOCUS_ON_AUTHOR_ITEM,\n    payload,\n  };\n}\n\nexport function updateInputValue(payload) {\n  return {\n    type: UPDATE_INPUT_VALUE,\n    payload,\n  };\n}\n","import displaceElement from '../lib/utils';\nimport {\n  DISPLAY_AUTHOR_ITEMS,\n  HANDLE_AUTHOR_ITEM_HOVERING,\n  HANDLE_FOCUS_ON_AUTHOR_ITEM,\n  LOAD_BUTTON_CLICKED,\n  PLACE_AUTHOR_ITEM,\n  REMOVE_AUTHOR_ITEM,\n  HANDLE_ENTER_NEW_NAME,\n  UPDATE_INPUT_VALUE,\n  CANCEL_INPUTTING,\n} from './actions';\n\nconst actionHandlers = {\n  [LOAD_BUTTON_CLICKED]: previousState => ({\n    ...previousState,\n    loading: true,\n  }),\n  [DISPLAY_AUTHOR_ITEMS]: (previousState, { payload: loadedAuthorsList }) => {\n    const authorsRenderList = [];\n    const authorsById = loadedAuthorsList.reduce((obj, authorName, id) => {\n      authorsRenderList.push(id.toString());\n      return { ...obj, [id]: { authorName, inputValue: authorName } };\n    }, {});\n\n    return {\n      ...previousState,\n      authorsById,\n      authorsRenderList,\n    };\n  },\n  [HANDLE_AUTHOR_ITEM_HOVERING]: (previousState, { payload: authorId }) => ({\n    ...previousState,\n    hoveredAuthorId: authorId,\n  }),\n  [UPDATE_INPUT_VALUE]: (previousState, { payload: newValue }) => {\n    const { authorsById, focusedAuthorId } = previousState;\n    const { authorName } = authorsById[focusedAuthorId];\n\n    return {\n      ...previousState,\n      authorsById: {\n        ...authorsById,\n        [previousState.focusedAuthorId]: {\n          authorName,\n          inputValue: newValue,\n        },\n      },\n    };\n  },\n  [HANDLE_ENTER_NEW_NAME]: (previousState, { payload: newName }) => {\n    if (newName === '') {\n      return previousState;\n    }\n\n    return {\n      ...previousState,\n      authorsById: {\n        ...previousState.authorsById,\n        [previousState.focusedAuthorId]: {\n          authorName: newName,\n          inputValue: newName,\n        },\n      },\n      focusedAuthorId: null,\n    };\n  },\n  [CANCEL_INPUTTING]: (previousState) => {\n    const { authorsById, focusedAuthorId } = previousState;\n    const { authorName } = authorsById[focusedAuthorId];\n\n    return {\n      ...previousState,\n      authorsById: {\n        ...authorsById,\n        [previousState.focusedAuthorId]: {\n          authorName,\n          inputValue: authorName,\n        },\n      },\n      focusedAuthorId: null,\n      focusedItemState: null,\n    };\n  },\n  [PLACE_AUTHOR_ITEM]: (previousState) => {\n    const {\n      authorsRenderList,\n      hoveredAuthorId,\n      focusedAuthorId,\n    } = previousState;\n    const shiftingIndex = authorsRenderList.indexOf(focusedAuthorId);\n    const shiftToIndex = authorsRenderList.indexOf(hoveredAuthorId);\n\n    return {\n      ...previousState,\n      authorsRenderList: displaceElement(\n        authorsRenderList,\n        shiftingIndex,\n        shiftToIndex,\n      ),\n      focusedAuthorId: null,\n      focusedItemState: null,\n      // hoveredAuthorId: previousState.hoveredAuthorId,\n    };\n  },\n  [HANDLE_FOCUS_ON_AUTHOR_ITEM]: (previousState, { payload }) => ({\n    ...previousState,\n    focusedAuthorId: payload.authorId,\n    focusedItemState: payload.selectedState,\n  }),\n  [REMOVE_AUTHOR_ITEM]: (previousState, { payload: authorIdToRemove }) => {\n    delete previousState.authorsById[authorIdToRemove];\n\n    return {\n      ...previousState,\n      authorsById: { ...previousState.authorsById },\n      authorsRenderList: previousState.authorsRenderList.reduce(\n        (newList, currItemId) => {\n          if (currItemId !== authorIdToRemove) {\n            return [...newList, currItemId];\n          }\n          return newList;\n        },\n        [],\n      ),\n    };\n  },\n};\n\nconst initialStore = {\n  loading: false,\n  authorsRenderList: null,\n  authorsById: null,\n  focusedAuthorId: null,\n  focusedItemState: null,\n  hoveredAuthorId: null,\n};\n\nexport default function reducer(previousState = initialStore, action) {\n  return actionHandlers[action.type]\n    ? actionHandlers[action.type](previousState, action)\n    : previousState;\n}\n","import React from 'react';\nimport { string, func } from 'prop-types';\nimport { AUTHOR_ITEM_STATES } from '../redux/actions';\nimport './Manipulator.css';\n\nfunction Manipulator(props) {\n  const { ownerId, onSelectState, onRemoveClick } = props;\n\n  return (\n    <div className=\"manipulator\">\n      <button\n        type=\"button\"\n        className=\"manipulator-button rename\"\n        onClick={() => onSelectState(ownerId, AUTHOR_ITEM_STATES.RENAMING)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Rename\">\n          &#9997;\n        </span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"manipulator-button move\"\n        onClick={() => onSelectState(ownerId, AUTHOR_ITEM_STATES.MOVING)}\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Move\">\n          &#10037;\n        </span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"manipulator-button remove\"\n        onClick={\n          () => onRemoveClick(ownerId)\n        }\n      >\n        <span className=\"context-image\" role=\"img\" aria-label=\"Remove\">\n          &#128465;\n        </span>\n      </button>\n    </div>\n  );\n}\n\nManipulator.propTypes = {\n  ownerId: string.isRequired,\n  onRemoveClick: func.isRequired,\n  onSelectState: func.isRequired,\n};\n\nexport default Manipulator;\n","import { connect } from 'react-redux';\nimport Manipulator from './Manipulator';\nimport { removeAuthorItem, handleFocus } from '../redux/actions';\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onRemoveClick: () => dispatch(removeAuthorItem(ownProps.ownerId)),\n    onSelectState: (authorId, selectedState) => dispatch(\n      handleFocus({ authorId, selectedState })\n    ),\n  };\n}\n\nconst ManipulatorHandler = connect(\n  null,\n  mapDispatchToProps\n)(Manipulator);\n\nexport default ManipulatorHandler;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport ManipulatorHandler from './ManipulatorHandler';\nimport { AUTHOR_DISPLACE_MARKERS, AUTHOR_ITEM_STATES } from '../redux/actions';\nimport './AuthorItem.css';\n\nconst AuthorItem = (props) => {\n  const {\n    id,\n    authorName,\n    inputValue,\n    hovered,\n    selected,\n    focusedItemState,\n    marker,\n    onMouseEnter,\n    onUpdateInputValue,\n    onCancelInputting,\n    onApplyNewName,\n    unwrapped,\n    displaceAuthorItem,\n  } = props;\n\n  return (\n    <Fragment>\n      {(marker === AUTHOR_DISPLACE_MARKERS.ABOVE || selected)\n      && focusedItemState === AUTHOR_ITEM_STATES.MOVING\n      && (\n        <button\n          type=\"button\"\n          className=\"marker\"\n          onClick={() => displaceAuthorItem(id)}\n        >\n          {selected ? '▼' : '▲'}\n        </button>\n      )}\n      <section\n        className={`item-wrapper${hovered ? ' hovered' : ''}`}\n        onMouseEnter={onMouseEnter}\n      >\n        <label\n          htmlFor={`author_${id}`}\n          className=\"author-name\"\n        >\n          {authorName}\n          <input\n            name={`author_${id}`}\n            className={unwrapped ? 'unwrapped' : 'wrapped'}\n            type=\"text\"\n            value={inputValue}\n            disabled={!unwrapped}\n            onKeyDown={(event) => {\n              switch (event.key) {\n                case 'Enter':\n                  onApplyNewName(event.target.value.trim());\n                  break;\n                case 'Escape':\n                  onCancelInputting();\n                  break;\n                default:\n              }\n            }}\n            onChange={event => onUpdateInputValue(event.target.value.trim())}\n          />\n        </label>\n        {\n          hovered && !selected && <ManipulatorHandler ownerId={id} />\n        }\n      </section>\n      {(marker === AUTHOR_DISPLACE_MARKERS.BELOW || selected)\n      && focusedItemState === AUTHOR_ITEM_STATES.MOVING\n      && (\n        <button\n          type=\"button\"\n          className=\"marker\"\n          onClick={() => displaceAuthorItem(id)}\n        >\n          {selected ? '▲' : '▼'}\n        </button>\n      )}\n    </Fragment>\n  );\n};\n\nAuthorItem.defaultProps = {\n  unwrapped: false,\n  inputValue: '',\n  focusedItemState: null,\n};\n\nAuthorItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  hovered: PropTypes.bool.isRequired,\n  selected: PropTypes.bool.isRequired,\n  marker: PropTypes.string.isRequired,\n  displaceAuthorItem: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  unwrapped: PropTypes.bool,\n  focusedItemState: PropTypes.string,\n  onMouseEnter: PropTypes.func.isRequired,\n  onApplyNewName: PropTypes.func.isRequired,\n  onUpdateInputValue: PropTypes.func.isRequired,\n  onCancelInputting: PropTypes.func.isRequired,\n};\n\nexport default AuthorItem;\n","import { connect } from 'react-redux';\nimport AuthorItem from './AuthorItem';\nimport {\n  displaceAuthorItem,\n  handleAuthorHovering,\n  handleRenaming,\n  updateInputValue,\n  cancelRenaming,\n  AUTHOR_ITEM_STATES,\n} from '../redux/actions';\n\nfunction mapStateToProps(state, ownProps) {\n  const { id } = ownProps;\n  const {\n    hoveredAuthorId,\n    focusedAuthorId,\n    focusedItemState,\n    authorsById: {\n      [id]: {\n        authorName,\n        inputValue,\n      },\n    },\n  } = state;\n\n  const focused = id === focusedAuthorId;\n\n  const mappedProps = {\n    authorName,\n    inputValue,\n    focusedItemState,\n    selected: focused,\n    hovered: focusedAuthorId ? false : id === hoveredAuthorId,\n  };\n\n  if (focused) {\n    mappedProps.unwrapped = focusedItemState === AUTHOR_ITEM_STATES.RENAMING;\n  }\n\n  return mappedProps;\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onUpdateInputValue: newValue => dispatch(updateInputValue(newValue)),\n    onApplyNewName: newName => dispatch(handleRenaming(newName)),\n    onMouseEnter: () => dispatch(handleAuthorHovering(ownProps.id)),\n    displaceAuthorItem: () => dispatch(displaceAuthorItem(ownProps.id)),\n    onCancelInputting: () => dispatch(cancelRenaming()),\n  };\n}\n\nconst AuthorItemHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthorItem);\n\nexport default AuthorItemHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AuthorsList.css';\nimport { AUTHOR_DISPLACE_MARKERS, AUTHOR_ITEM_STATES } from '../redux/actions';\nimport AuthorItemHandler from './AuthorItemHandler';\n\nfunction AuthorsList(props) {\n  const {\n    loading,\n    loadingAuthorsList,\n    authorsRenderList,\n    focusedAuthorId,\n    focusedItemState,\n  } = props;\n  let focusedOccurred = false;\n  let marker;\n\n  return (\n    <div className=\"list-wrapper\">\n      {authorsRenderList\n        ? authorsRenderList.map(\n          (authorId) => {\n            if (authorId === focusedAuthorId) { focusedOccurred = true; }\n            marker = '';\n            if (\n              focusedItemState === AUTHOR_ITEM_STATES.MOVING\n              && focusedAuthorId !== authorId\n            ) {\n              if (focusedOccurred === true) {\n                marker = AUTHOR_DISPLACE_MARKERS.BELOW;\n              } else {\n                marker = AUTHOR_DISPLACE_MARKERS.ABOVE;\n              }\n            }\n\n            return (\n              <AuthorItemHandler\n                key={authorId}\n                id={authorId}\n                marker={marker}\n              />\n            );\n          }\n        ) : null}\n      {!loading && (\n        <button\n          type=\"button\"\n          disabled={loading}\n          className=\"load-button\"\n          onClick={loadingAuthorsList}\n        >\n          {loading ? 'Loading data...' : 'Load authors data'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nAuthorsList.defaultProps = {\n  loading: null,\n  authorsRenderList: null,\n  focusedAuthorId: null,\n  focusedItemState: null,\n};\n\nAuthorsList.propTypes = {\n  authorsRenderList: PropTypes.arrayOf(PropTypes.string),\n  focusedAuthorId: PropTypes.string,\n  focusedItemState: PropTypes.string,\n  loading: PropTypes.bool,\n  loadingAuthorsList: PropTypes.func.isRequired,\n};\n\nexport default AuthorsList;\n","import { connect } from 'react-redux';\nimport AuthorsList from './AuthorsList';\nimport {\n  displayAuthors,\n  loadingAuthorsList,\n} from '../redux/actions';\n\nfunction mapStateToProps(state) {\n  const {\n    authorsRenderList,\n    loading,\n    focusedItemState,\n    focusedAuthorId,\n  } = state;\n\n  return {\n    authorsRenderList,\n    loading,\n    focusedItemState,\n    focusedAuthorId,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadingAuthorsList: () => {\n      dispatch(loadingAuthorsList());\n\n      const xhr = new XMLHttpRequest();\n\n      xhr.open(\n        'GET',\n        'https://my-json-server.typicode.com/mate-academy/literary-blog/authors',\n      );\n      xhr.responseType = 'json';\n      xhr.addEventListener('load', () => {\n        if (xhr.readyState === 4) {\n          dispatch(displayAuthors(xhr.response));\n        }\n      });\n      xhr.send();\n    },\n  };\n}\n\nconst AuthorsListHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthorsList);\n\nexport default AuthorsListHandler;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducer from './redux/reducers';\nimport AuthorsListHandler from './components/AuthorsListHandler';\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AuthorsListHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}